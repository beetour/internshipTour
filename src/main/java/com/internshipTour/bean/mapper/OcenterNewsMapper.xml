<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.internshipTour.bean.mapper.OcenterNewsMapper" >
  <resultMap id="OcenterNewsResultMap" type="com.internshipTour.bean.OcenterNews" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="position" property="position" jdbcType="INTEGER" />
    <result column="cover" property="cover" jdbcType="INTEGER" />
    <result column="view" property="view" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="INTEGER" />
    <result column="collection" property="collection" jdbcType="INTEGER" />
    <result column="dead_line" property="deadLine" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uid, title, description, category, status, reason, sort, position, cover, view, 
    comment, collection, dead_line, source, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="OcenterNewsResultMap" parameterType="com.internshipTour.bean.OcenterNewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ocenter_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="OcenterNewsResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ocenter_news
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ocenter_news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.internshipTour.bean.OcenterNewsExample" >
    delete from ocenter_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.internshipTour.bean.OcenterNews" >
    insert into ocenter_news (id, uid, title, 
      description, category, status, 
      reason, sort, position, 
      cover, view, comment, 
      collection, dead_line, source, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{category,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{reason,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{position,jdbcType=INTEGER}, 
      #{cover,jdbcType=INTEGER}, #{view,jdbcType=INTEGER}, #{comment,jdbcType=INTEGER}, 
      #{collection,jdbcType=INTEGER}, #{deadLine,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.internshipTour.bean.OcenterNews" >
    insert into ocenter_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="view != null" >
        view,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="collection != null" >
        collection,
      </if>
      <if test="deadLine != null" >
        dead_line,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        #{position,jdbcType=INTEGER},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=INTEGER},
      </if>
      <if test="view != null" >
        #{view,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=INTEGER},
      </if>
      <if test="collection != null" >
        #{collection,jdbcType=INTEGER},
      </if>
      <if test="deadLine != null" >
        #{deadLine,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.internshipTour.bean.OcenterNewsExample" resultType="java.lang.Integer" >
    select count(*) from ocenter_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ocenter_news
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=INTEGER},
      </if>
      <if test="record.cover != null" >
        cover = #{record.cover,jdbcType=INTEGER},
      </if>
      <if test="record.view != null" >
        view = #{record.view,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=INTEGER},
      </if>
      <if test="record.collection != null" >
        collection = #{record.collection,jdbcType=INTEGER},
      </if>
      <if test="record.deadLine != null" >
        dead_line = #{record.deadLine,jdbcType=INTEGER},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ocenter_news
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      reason = #{record.reason,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      position = #{record.position,jdbcType=INTEGER},
      cover = #{record.cover,jdbcType=INTEGER},
      view = #{record.view,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=INTEGER},
      collection = #{record.collection,jdbcType=INTEGER},
      dead_line = #{record.deadLine,jdbcType=INTEGER},
      source = #{record.source,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.internshipTour.bean.OcenterNews" >
    update ocenter_news
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=INTEGER},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=INTEGER},
      </if>
      <if test="view != null" >
        view = #{view,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=INTEGER},
      </if>
      <if test="collection != null" >
        collection = #{collection,jdbcType=INTEGER},
      </if>
      <if test="deadLine != null" >
        dead_line = #{deadLine,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.internshipTour.bean.OcenterNews" >
    update ocenter_news
    set uid = #{uid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      position = #{position,jdbcType=INTEGER},
      cover = #{cover,jdbcType=INTEGER},
      view = #{view,jdbcType=INTEGER},
      comment = #{comment,jdbcType=INTEGER},
      collection = #{collection,jdbcType=INTEGER},
      dead_line = #{deadLine,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
 <select id="selectByCategory" resultMap="OcenterNewsResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ocenter_news
    where category = #{0} and status = 1  order by id desc limit 1
  </select>
  
   <select id="selectByPage" resultMap="OcenterNewsResultMap" parameterType="com.internshipTour.requesrBean.News" >
    select 
    <include refid="Base_Column_List" />
    from ocenter_news where status = 1
    order by id desc limit #{page,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
</mapper>